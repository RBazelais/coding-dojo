Last login: Mon Dec 11 17:02:03 on ttys002
Hermes:~ rachel$ cd Git
GitHubRepoAssignment/ Github/
Hermes:~ rachel$ cd Git
GitHubRepoAssignment/ Github/
Hermes:~ rachel$ cd GitHubRepoAssignment/
Hermes:GitHubRepoAssignment rachel$ git init
Initialized empty Git repository in /Users/rachel/GitHubRepoAssignment/.git/
Hermes:GitHubRepoAssignment rachel$ git status
On branch master

Initial commit

nothing to commit (create/copy files and use "git add" to track)
Hermes:GitHubRepoAssignment rachel$ touch nothingHere.txt
Hermes:GitHubRepoAssignment rachel$ git commit -m "nothing commited here"
On branch master

Initial commit

Untracked files:
	nothingHere.txt

nothing added to commit but untracked files present
Hermes:GitHubRepoAssignment rachel$ git add .
Hermes:GitHubRepoAssignment rachel$ git commit -m "nothing commited here"\
>
Hermes:GitHubRepoAssignment rachel$ git commit -m "nothing commited here"
[master (root-commit) 881c34e] nothing commited here
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 nothingHere.txt
Hermes:GitHubRepoAssignment rachel$ git remote add origin https://github.com/RBazelais/GitHubRepoAssignment.git
Hermes:GitHubRepoAssignment rachel$ git remote -v
origin	https://github.com/RBazelais/GitHubRepoAssignment.git (fetch)
origin	https://github.com/RBazelais/GitHubRepoAssignment.git (push)
Hermes:GitHubRepoAssignment rachel$ touch readme.md
Hermes:GitHubRepoAssignment rachel$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	readme.md

nothing added to commit but untracked files present (use "git add" to track)
Hermes:GitHubRepoAssignment rachel$ git add .
Hermes:GitHubRepoAssignment rachel$ git push -u origin master
Username for 'https://github.com': rbazelais
Password for 'https://rbazelais@github.com':
To https://github.com/RBazelais/GitHubRepoAssignment.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/RBazelais/GitHubRepoAssignment.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
Hermes:GitHubRepoAssignment rachel$ git fetch
warning: no common commits
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/RBazelais/GitHubRepoAssignment
 * [new branch]      master     -> origin/master
Hermes:GitHubRepoAssignment rachel$ git push -u origin master
To https://github.com/RBazelais/GitHubRepoAssignment.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'https://github.com/RBazelais/GitHubRepoAssignment.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
Hermes:GitHubRepoAssignment rachel$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> master

Hermes:GitHubRepoAssignment rachel$ git branch --set-upstream-to=origin/<branch> master
-bash: branch: No such file or directory
Hermes:GitHubRepoAssignment rachel$ git pull master
fatal: 'master' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
Hermes:GitHubRepoAssignment rachel$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   readme.md
GIT-PUSH(1)                       Git Manual                       GIT-PUSH(1)
GIT-PUSH(1)                       Git Manual                       GIT-PUSH(1)

NAME
       git-push - Update remote refs along with associated objects

SYNOPSIS
       git push [--all | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=<git-receive-pack>]
                  [--repo=<repository>] [-f | --force] [-d | --delete] [--prune] [-v | --verbose]
                  [-u | --set-upstream] [--push-option=<string>]
                  [--[no-]signed|--sign=(true|false|if-asked)]
                  [--force-with-lease[=<refname>[:<expect>]]]
                  [--no-verify] [<repository> [<refspec>...]]

DESCRIPTION
       Updates remote refs using local refs, while sending objects necessary
       to complete the given refs.

       You can make interesting things happen to a repository every time you
       push into it, by setting up hooks there. See documentation for git-
       receive-pack(1).

       When the command line does not specify where to push with the
...skipping...

                   SUMMARY OF LESS COMMANDS

      Commands marked with * may be preceded by a number, N.
      Notes in parentheses indicate the behavior if N is given.
      A key preceded by a caret indicates the Ctrl key; thus ^K is ctrl-K.

  h  H                 Display this help.
  q  :q  Q  :Q  ZZ     Exit.
 ---------------------------------------------------------------------------

                           MOVING

  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).
  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).
  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).
  b  ^B  ESC-v      *  Backward one window (or N lines).
  z                 *  Forward  one window (and set window to N).
  w                 *  Backward one window (and set window to N).
  ESC-SPACE         *  Forward  one window, but don't stop at end-of-file.
  d  ^D             *  Forward  one half-window (and set half-window to N).
  u  ^U             *  Backward one half-window (and set half-window to N).
  ESC-)  RightArrow *  Left  one half screen width (or N positions).
  ESC-(  LeftArrow  *  Right one half screen width (or N positions).
...skipping...

                   SUMMARY OF LESS COMMANDS

      Commands marked with * may be preceded by a number, N.
      Notes in parentheses indicate the behavior if N is given.
      A key preceded by a caret indicates the Ctrl key; thus ^K is ctrl-K.

  h  H                 Display this help.
  q  :q  Q  :Q  ZZ     Exit.
 ---------------------------------------------------------------------------

                           MOVING

  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).
  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).
  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).
  b  ^B  ESC-v      *  Backward one window (or N lines).
  z                 *  Forward  one window (and set window to N).
  w                 *  Backward one window (and set window to N).
  ESC-SPACE         *  Forward  one window, but don't stop at end-of-file.
  d  ^D             *  Forward  one half-window (and set half-window to N).
  u  ^U             *  Backward one half-window (and set half-window to N).
  ESC-)  RightArrow *  Left  one half screen width (or N positions).
  ESC-(  LeftArrow  *  Right one half screen width (or N positions).
HELP -- Press RETURN for more, or q when done...skipping...

Hermes:GitHubRepoAssignment rachel$ git commit -m "added readme file"
[master 198349d] added readme file
 1 file changed, 1 insertion(+)
 create mode 100644 readme.md
Hermes:GitHubRepoAssignment rachel$ git push origin master
To https://github.com/RBazelais/GitHubRepoAssignment.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'https://github.com/RBazelais/GitHubRepoAssignment.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
Hermes:GitHubRepoAssignment rachel$ git pull master
fatal: 'master' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
Hermes:GitHubRepoAssignment rachel$ git config --global user.name "rbazelais"
Hermes:GitHubRepoAssignment rachel$ hit push --help
-bash: hit: command not found
Hermes:GitHubRepoAssignment rachel$ git push --help
Hermes:GitHubRepoAssignment rachel$ git push GitHubRepoAssignment
fatal: 'GitHubRepoAssignment' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
Hermes:GitHubRepoAssignment rachel$ git status
On branch master
nothing to commit, working tree clean
Hermes:GitHubRepoAssignment rachel$ ls
nothingHere.txt	readme.md
Hermes:GitHubRepoAssignment rachel$ git remote add origin https://github.com/RBazelais/GitHubRepoAssignment.git
fatal: remote origin already exists.
Hermes:GitHubRepoAssignment rachel$ $HOME/.gitconfig
-bash: /Users/rachel/.gitconfig: Permission denied
Hermes:GitHubRepoAssignment rachel$ git remote -v
origin	https://github.com/RBazelais/GitHubRepoAssignment.git (fetch)
origin	https://github.com/RBazelais/GitHubRepoAssignment.git (push)
Hermes:GitHubRepoAssignment rachel$ git pull origin master
From https://github.com/RBazelais/GitHubRepoAssignment
 * branch            master     -> FETCH_HEAD
fatal: refusing to merge unrelated histories
Hermes:GitHubRepoAssignment rachel$ git rebase
There is no tracking information for the current branch.
Please specify which branch you want to rebase against.
See git-rebase(1) for details.

    git rebase <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> master

Hermes:GitHubRepoAssignment rachel$ git branch --set-upstream-to=origin/ master
error: the requested upstream branch 'origin/' does not exist
hint:
hint: If you are planning on basing your work on an upstream
hint: branch that already exists at the remote, you may need to
hint: run "git fetch" to retrieve it.
hint:
hint: If you are planning to push out a new local branch that
hint: will track its remote counterpart, you may want to use
hint: "git push -u" to set the upstream config as you push.
Hermes:GitHubRepoAssignment rachel$ git --help
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
Hermes:GitHubRepoAssignment rachel$ git log
commit 198349df2dde7a7de4c62e663fc79316b3982227 (HEAD -> master)
Author: Rachel Bazelais <bazelais.rachel@gmail.com>
Date:   Mon Dec 11 17:17:34 2017 -0800

    added readme file

commit 881c34e50033b0a9c287f7a41a6d064ba85ac321
Author: Rachel Bazelais <bazelais.rachel@gmail.com>
Date:   Mon Dec 11 17:11:43 2017 -0800

    nothing commited here
Hermes:GitHubRepoAssignment rachel$ git status
On branch master
nothing to commit, working tree clean
Hermes:GitHubRepoAssignment rachel$ git remote add origin https://github.com/RBazelais/GitHubRepoAssignment.git
fatal: remote origin already exists.
Hermes:GitHubRepoAssignment rachel$ git remote add origin2  https://github.com/RBazelais/GitHubRepoAssignment.git
Hermes:GitHubRepoAssignment rachel$ git push origin2 master
Counting objects: 6, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 562 bytes | 562.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0)
To https://github.com/RBazelais/GitHubRepoAssignment.git
 * [new branch]      master -> master
Hermes:GitHubRepoAssignment rachel$